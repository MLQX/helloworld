server.port=8889



logging.level.com.example.demo=debug
logging.level.root=debug
#logging.file.name=rollback.log
#logging.file.path=/sq/ruoan/workspace/helloworld
#logging.file.max-size=50MB

#tomcat.connector.maxHttpHeaderSize=102400000

#spring.datasource.username=root
#spring.datasource.password=123456
#spring.datasource.url=jdbc:mysql://localhost:3306/mp?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#
#
##config druid
##连接池的设置
##初始化时建立物理连接的个数
#spring.datasource.druid.initial-size=5
##最小连接池数量
#spring.datasource.druid.min-idle=5
##最大连接池数量 maxIdle已经不再使用
#spring.datasource.druid.max-active=20
##获取连接时最大等待时间，单位毫秒
#spring.datasource.druid.max-wait=60000
##申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
#spring.datasource.druid.test-while-idle=true
##既作为检测的间隔时间又作为testWhileIdel执行的依据
#spring.datasource.druid.time-between-eviction-runs-millis=60000
##销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
#spring.datasource.druid.min-evictable-idle-time-millis=30000
##用来检测连接是否有效的sql 必须是一个查询语句
##mysql中为 select 'x'
##oracle中为 select 1 from dual
#spring.datasource.druid.validation-query=select 'x'
##申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#spring.datasource.druid.test-on-borrow=false
##归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#spring.datasource.druid.test-on-return=false
##当数据库抛出不可恢复的异常时,抛弃该连接
#spring.datasource.druid.exception-sorter=true
##是否缓存preparedStatement,mysql5.5+建议开启
##spring.datasource.druid.pool-prepared-statements=true
##当值大于0时poolPreparedStatements会自动修改为true
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
##配置扩展插件
#spring.datasource.druid.filters=stat,wall
##通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
##合并多个DruidDataSource的监控数据
#spring.datasource.druid.use-global-data-source-stat=true
##设置访问druid监控页的账号和密码,默认没有
##spring.datasource.druid.stat-view-servlet.login-username=admin
##spring.datasource.druid.stat-view-servlet.login-password=admin




# 数据库配置
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mp?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
# Hikari 连接池配置
# 最小空闲连接数量
spring.datasource.hikari.minimum-idle=5
# 空闲连接存活最大时间，默认600000（10分钟）
spring.datasource.hikari.idle-timeout=180000
# 连接池最大连接数，默认是10
spring.datasource.hikari.maximum-pool-size=10
# 此属性控制从池返回的连接的默认自动提交行为,默认值：true
spring.datasource.hikari.auto-commit=true
# 连接池名称
spring.datasource.hikari.pool-name=MyHikariCP
# 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
spring.datasource.hikari.max-lifetime=1800000
# 数据库连接超时时间,默认30秒，即30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1


mybatis.mapper-locations=classpath:mappers/*Mapper.xml
mybatis.type-aliases-package=com.example.demo.pojo



spring.data.elasticsearch.cluster-name=my-application
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300



# 配置rocketmq
#rocketmq.producer.group=my-group
#rocketmq.consumer.group=my-group
#rocketmq.name-server=localhost:9876




# 自定义配置
atguigu.hello.prefix=gong
atguigu.hello.suffix=shou